<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bolean.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.bolean.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="head_img" jdbcType="VARCHAR" property="headImg"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_tel" jdbcType="VARCHAR" property="userTel"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <collection property="roles" javaType="list" column="role_id" select="selectRoles" >
            <id column="role_id" jdbcType="INTEGER" property="roleId" />
            <result column="key_name" jdbcType="VARCHAR" property="keyName" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    user_id, head_img, password, real_name, sex, status, user_name, user_tel, create_time,
    update_time, create_id, create_name, update_id, update_name, memo
    </sql>

    <sql id="User_Role_Column_List" >
    ur.id, ur.role_id, ur.user_id, ur.create_time, ur.update_time, ur.create_id, ur.create_name, ur.update_id,
    ur.update_name, ur.memo, r.role_name, r.key_name, u.head_img, u.real_name, u.sex, u.status, u.user_name, u.user_tel
    </sql>

    <sql id="Role_Column_List">
        role_id, key_name, role_name
    </sql>

    <sql id="where">
        <where>
            <if test="userId !=null and userId != ''">
                AND user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != ''">
                AND user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="realName != null and realName !=''">
                AND real_name = #{realName,jdbcType=VARCHAR} OR real_name LIKE
                CONCAT('%',#{realName,jdbcType=VARCHAR},'%' )
            </if>
            <if test="sex != null and sex !=null">
                AND sex = #{sex,jdbcType=BIT}
            </if>
            <!--<if test="status != null and status != ''">
                AND status = #{status,jdbcType=BIT}
            </if>-->
            AND status != 0
            <if test="userTel != null and userTel != ''">
                AND user_tel = #{userTel,jdbcType=VARCHAR}
            </if>
            <if test="nut != null and nut != ''">
                AND (user_tel LIKE CONCAT('%',#{nut},'%')
                OR user_name LIKE CONCAT('%',#{nut},'%')
                OR real_name LIKE CONCAT('%',#{nut},'%'))
            </if>
        </where>
    </sql>

    <select id="selectByInfo" resultMap="BaseResultMap" parameterType="java.lang.Object">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        <include refid="where"/>
    </select>

    <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"><property name="alias" value="u"/></include>,
        <include refid="User_Role_Column_List"><property name="alias" value="ur"/></include>
        from tb_user u
        LEFT JOIN tb_user_role ur ON u.user_id=ur.user_id
        WHERE u.user_name = #{_parameter,jdbcType=VARCHAR}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM tb_user
    </select>
    
    <select id="selectRoles" parameterType="int" resultType="com.bolean.entity.Role">
        select
        <include refid="User_Role_Column_List"/>
        FROM tb_user_role
        WHERE ur.user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectOne" parameterType="com.bolean.entity.User" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user
        <include refid="where"/>
    </select>

    <insert id="insertSelective" parameterType="com.bolean.entity.User">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userTel != null">
                user_tel,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createName != null">
                create_name,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateName != null">
                update_name,
            </if>
            <if test="memo != null">
                memo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BIT},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userTel != null">
                #{userTel,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=INTEGER},
            </if>
            <if test="createName != null">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=INTEGER},
            </if>
            <if test="updateName != null">
                #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                #{memo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.bolean.entity.User">
        update tb_user
        <set>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=BIT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userTel != null">
                user_tel = #{userTel,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            <if test="createName != null">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=INTEGER},
            </if>
            <if test="updateName != null">
                update_name = #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="batchDel" parameterType="Map">
        UPDATE tb_user SET
        status=0,
        update_id = #{updateId,jdbcType=INTEGER},
        update_name = #{updateName,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        WHERE user_id IN (${ids});
    </update>
</mapper>